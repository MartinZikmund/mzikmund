<Project ToolsVersion="15.0">
	<Import Project="$(SolutionDir)\TargetingOverride.props" Condition="exists('$(SolutionDir)\TargetingOverride.props')" />

	<PropertyGroup>
		<Copyright>Martin Zikmund 2023</Copyright>
		<Author>Martin Zikmund</Author>

		<DefaultLanguage>en-US</DefaultLanguage>
		<LangVersion>11.0</LangVersion>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<RepositoryUrl>https://github.com/MartinZikmund/mzikmund</RepositoryUrl>
		
		<DebugType>portable</DebugType>
		<DebugSymbols>True</DebugSymbols>

		<!--
			Adding NoWarn to remove build warnings
			NU1507: Warning when there are multiple package sources when using CPM with no source mapping
			NETSDK1201: Warning that specifying RID won't create self containing app
			PRI257: Ignore default language (en) not being one of the included resources (eg en-us, en-uk)
		-->
		<NoWarn>$(NoWarn);NU1507;NETSDK1201;PRI257</NoWarn>

		<ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
		<EnableWindowsTargeting>true</EnableWindowsTargeting>
		
		<!-- Required for Hot Reload (See https://github.com/dotnet/sdk/issues/36666) -->
		<IncludeSourceRevisionInInformationalVersion Condition="'$(Configuration)'=='Debug'">false</IncludeSourceRevisionInInformationalVersion>
	</PropertyGroup>

	<ItemGroup>
		<!--This override is used to validate the use of specific version of the C# Compiler-->
		<!-- Both compiler version and CodeStyle package version should be kept in sync -->
		<PackageReference Include="Microsoft.Net.Compilers.Toolset" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp.CodeStyle" PrivateAssets="all" />
	</ItemGroup>

	<PropertyGroup>
		<AccelerateBuildsInVisualStudio>true</AccelerateBuildsInVisualStudio>
		<EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<IsTestProject>$(MSBuildProjectName.Contains('Test'))</IsTestProject>
		<IsSampleProject>$(MSBuildProjectName.Contains('Sample'))</IsSampleProject>
	</PropertyGroup>

	<PropertyGroup>
		<IsAndroid>false</IsAndroid>
		<IsIOS>false</IsIOS>
		<IsMac>false</IsMac>
		<IsMacCatalyst>false</IsMacCatalyst>
		<IsWinAppSdk>false</IsWinAppSdk>
	</PropertyGroup>

	<Choose>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
			<PropertyGroup>
				<IsAndroid>true</IsAndroid>
				<SupportedOSPlatformVersion>21.0</SupportedOSPlatformVersion>
			</PropertyGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
			<PropertyGroup>
				<IsIOS>true</IsIOS>
				<SupportedOSPlatformVersion>14.2</SupportedOSPlatformVersion>
			</PropertyGroup>

			<!--
			Eagerly define capabilities for iOS to avoid VS 2022 to ask for
			project reload, and ninitialize the debugger toolbar faster.
			See https://github.com/unoplatform/uno/issues/14303.
			-->
			<ItemGroup>
				<ProjectCapability Include="XamarinStaticLaunchProfiles" />
				<ProjectCapability Include="Maui" />
				<ProjectCapability Include="MauiCore" />
			</ItemGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos'">
			<PropertyGroup>
				<IsMac>true</IsMac>
				<SupportedOSPlatformVersion>10.14</SupportedOSPlatformVersion>
			</PropertyGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">
			<PropertyGroup>
				<IsMacCatalyst>true</IsMacCatalyst>
				<SupportedOSPlatformVersion>14.0</SupportedOSPlatformVersion>
			</PropertyGroup>
		</When>
		<When Condition="$(TargetFramework.Contains('windows10'))">
			<PropertyGroup>
				<IsWinAppSdk>true</IsWinAppSdk>
				<SupportedOSPlatformVersion>10.0.18362.0</SupportedOSPlatformVersion>
				<TargetPlatformMinVersion>10.0.18362.0</TargetPlatformMinVersion>
				<RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
				<EnableCoreMrtTooling Condition=" '$(BuildingInsideVisualStudio)' != 'true' ">false</EnableCoreMrtTooling>
			</PropertyGroup>
		</When>
	</Choose>
</Project>
